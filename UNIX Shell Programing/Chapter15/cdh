#!/bin/bash
# cd history program -- final version
# sets PS1 to current directory
# eliminates duplicate entries
# implements "cd -name"
# stores cd history in $CDHISTFILE

alias cd=cdh
# implements ksh "cd old new"
function cdh
{
        typeset -i cdlen i
        typeset t

        if [ $# -eq 0 ]
        then
                set -- $HOME
        fi

        if [ $# -eq 2 ]
        then
                set -- $(echo $PWD | sed "s|$1|$2|")
        fi

        if [ "$CDHISTFILE" -a -r "$CDHISTFILE" ] # if directory history exists
        then
                typeset CDHIST
                i=-1
                while read -r t                 # read directory history file
                do
                        CDHIST[i=i+1]=$t
                done <$CDHISTFILE
        fi

        if [ "${CDHIST[0]}" != "$PWD" -a "$PWD" != "" ]
        then
                _cdins                          # insert $PWD into cd history
        fi

        cdlen=${#CDHIST[*]}                     # number of elements in history

        case "$@" in
        -)                                      # cd to new dir
                if [ "$OLDPWD" = "" ] && ((cdlen>1))
                then
                        echo ${CDHIST[1]}
                        'cd' ${CDHIST[1]}
                else
                        'cd' $@
                fi
                ;;
        -l)                                     # print directory list
                typeset -i num
                ((i=cdlen))
                while (((i=i-1)>=0))
                do
                        num=$i
                        echo "$num ${CDHIST[i]}"
                done
                return
                ;;
        -[0-9]|-[0-9][0-9])                     # cd to dir in list
                if (((i=${1#-})<cdlen))
                then
                        echo ${CDHIST[i]}
                        'cd' ${CDHIST[i]}
                else
                        'cd' $@
                fi
                ;;
        -*)                                     # cd to matched dir in list
                t=${1#-}
                i=1
                while ((i<cdlen))
                do
                        case ${CDHIST[i]} in
                        *$t*)
                                echo ${CDHIST[i]}
                                'cd' ${CDHIST[i]}
                                break
                                ;;
                        esac
                        ((i=i+1))
                done
                if ((i>=cdlen))
                then
                        'cd' $@
                fi
                ;;
        *)                                      # cd to new dir
                'cd' $@
                ;;
        esac

        _cdins                                  # insert $PWD into cd history

        if [ "$CDHISTFILE" ]
        then
                cdlen=${#CDHIST[*]}             # number of elements in history

                i=0
                while ((i<cdlen))
                do
                        echo ${CDHIST[i]}       # update directory history
                        ((i=i+1))
                done >$CDHISTFILE
        fi
        PS1="$PWD: "
}

function _cdins                                 # insert $PWD into cd history
{                                               # meant to be called only by cdh
        typeset -i i

        ((i=0))
        while ((i<${#CDHIST[*]}))               # see if dir is already in list
        do
                if [ "${CDHIST[$i]}" = "$PWD" ]
                then
                        break
                fi
                ((i=i+1))
        done

        if ((i>40))                             # limit max size of list
        then
                i=40
        fi

        while (((i=i-1)>=0))                    # bump old dirs in list
        do
                CDHIST[i+1]=${CDHIST[i]}
        done

        CDHIST[0]=$PWD                          # insert new directory in list
}
